<Window x:Class="TrackPoint_Test.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TrackPoint_Test"
        xmlns:viewModels="clr-namespace:TrackPoint_Test.ViewModels"
        xmlns:views="clr-namespace:TrackPoint_Test.Views"
        mc:Ignorable="d"
        Title="TrackPoint - Document Tracking System" Height="768" Width="1366" WindowStartupLocation="CenterScreen">

    <!-- 
    The Window.Resources section defines resources available to this window and its children.
    -->
    <Window.Resources>

        <!-- This converter is used to hide UI elements based on a true/false value -->
        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <!-- 
        ===============================================================================================
        DATA TEMPLATES: This is the core of the View-switching logic and the fix for your error.
        Each DataTemplate has a UNIQUE DataType.
        - When WPF sees a 'LoginViewModel' object, it knows to render it using a 'LoginView'.
        - When WPF sees a 'DashboardViewModel' object, it knows to render it using a 'DashboardView'.
        ===============================================================================================
        -->

        <!-- DataTemplate for the LoginViewModel -->
        <DataTemplate DataType="{x:Type viewModels:LoginViewModel}">
            <views:LoginView />
        </DataTemplate>

        <!-- DataTemplate for the DashboardViewModel -->
        <DataTemplate DataType="{x:Type viewModels:DashboardViewModel}">
            <views:DashboardView />
        </DataTemplate>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Header Row -->
            <RowDefinition Height="*"/>
            <!-- Content Row -->
        </Grid.RowDefinitions>

        <!-- 
        =======================================================================
        Header Section:
        - Displays a user greeting and a Logout button.
        - It is only visible when a user is logged in. This visibility is
          controlled by binding to the IsUserLoggedIn property in MainViewModel.
        =======================================================================
        -->
        <Border Grid.Row="0" Background="#FF333333" Padding="10" 
                Visibility="{Binding IsUserLoggedIn, Converter={StaticResource BoolToVis}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding LoggedInUserGreeting}" 
                           Foreground="White" FontWeight="Bold" FontSize="14"
                           VerticalAlignment="Center"/>

                <Button Grid.Column="1" Content="Logout" 
                        Command="{Binding LogoutCommand}" 
                        Background="#B71C1C" Foreground="White" BorderThickness="0"/>
            </Grid>
        </Border>

        <!-- 
        =======================================================================
        Main Content Area:
        - The ContentControl is a placeholder that displays content.
        - Its 'Content' is bound to the 'CurrentViewModel' property on MainViewModel.
        - WPF uses the DataTemplates defined above to automatically decide 
          which UserControl (LoginView or DashboardView) to place here.
        =======================================================================
        -->
        <ContentControl Grid.Row="1" Content="{Binding CurrentViewModel}" />

    </Grid>
</Window>